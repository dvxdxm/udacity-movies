name: Frontend Continuous Deployment
on:
  workflow_dispatch:

  push:
    branches:
      - main

env:
  NODE_VERSION: '20.x'

defaults:
  run:
    working-directory: starter/frontend

jobs:
  frontend-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Prepare Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
          cache-dependency-path: starter/frontend

      - name: Lint
        run: |
          npm ci
          npm run lint

  frontend-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Prepare Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
          cache-dependency-path: starter/frontend

      - name: Test
        run: |
          npm ci
          npm run test

  frontend-build:
    runs-on: ubuntu-latest
    needs: [frontend-lint, frontend-test]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Amazon ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AWS_ECR_REGISTRY }}/frontend
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: starter/frontend
          file: starter/frontend/Dockerfile
          build-args:
            - REACT_APP_MOVIE_API_URL: ${{ env.REACT_APP_MOVIE_API_URL }}
          push: true
          tags:
            - ${{ github.sha }}
            - latest


