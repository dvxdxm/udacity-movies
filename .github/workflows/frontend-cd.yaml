name: Frontend Continuous Deployment
on:
  workflow_dispatch:

  push:
    branches:
      - main
    paths:
      - 'starter/frontend/**/*'

env:
  NODE_VERSION: '20.x'

defaults:
  run:
    working-directory: starter/frontend

jobs:
  call-frontend-lint:
    name: Frontend Lint
    uses: ./.github/workflows/frontend-lint-job.yml
    with:
      node-version: '20.x'

  call-frontend-test:
    name: Frontend Test
    uses: ./.github/workflows/frontend-test-job.yml
    with:
      node-version: '20.x'

  frontend-build:
    name: Frontend Build
    runs-on: ubuntu-latest
    needs: [call-frontend-lint, call-frontend-test]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      # Workaround for lack of support for the 'env' context in the 'with' clause
      - name: Resolve Environment Variables
        id: get-env
        run: |
          echo "AWS_ECR_REGISTRY=$AWS_ECR_REGISTRY" >> "$GITHUB_OUTPUT"
          echo "REACT_APP_MOVIE_API_URL=$REACT_APP_MOVIE_API_URL" >> "$GITHUB_OUTPUT"

      - name: Generate Short SHA
        id: short-sha
        uses: benjlevesque/short-sha@v3.0
        with:
          length: 7

      - name: Login to Amazon ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.get-env.outputs.AWS_ECR_REGISTRY }}/frontend
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: starter/frontend
          file: starter/frontend/Dockerfile
          build-args: REACT_APP_MOVIE_API_URL=${{ steps.get-env.outputs.REACT_APP_MOVIE_API_URL }}
          push: true
          tags: ${{ steps.get-env.outputs.AWS_ECR_REGISTRY }}/frontend:${{ steps.short-sha.outputs.sha }},${{ steps.get-env.outputs.AWS_ECR_REGISTRY  }}/frontend:latest

  frontend-deploy:
    name: Frontend Deploy
    runs-on: ubuntu-latest
    needs: [frontend-build]
    defaults:
      run:
        working-directory: starter/frontend/k8s

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Resolve Environment Variables
        id: get-env
        run: |
          echo "AWS_REGION=$AWS_REGION" >> "$GITHUB_OUTPUT"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ steps.get-env.outputs.AWS_REGION }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure Kubectl Credentials
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name cluster

      - name: Install Kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash

      - name: Generate Kubernetes Manifest
        run: |
          kustomize edit set image frontend=$AWS_ECR_REGISTRY/frontend:latest
          kustomize build > frontend.yml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f frontend.yml