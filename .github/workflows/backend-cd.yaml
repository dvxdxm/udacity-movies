name: Backend Continuous Deployment
on:
  workflow_dispatch:

  push:
    branches:
      - main
    paths:
      - 'starter/backend/**/*'

env:
  PYTHON_VERSION: '3.10'

defaults:
  run:
    working-directory: starter/backend

jobs:
  call-backend-lint:
    name: Backend Lint
    uses: ./.github/workflows/backend-lint-job.yml
    with:
      python-version: '3.10'

  call-backend-test:
    name: Backend Test
    uses: ./.github/workflows/backend-test-job.yml
    with:
      python-version: '3.10'

  backend-build:
    name: Backend Build
    runs-on: ubuntu-latest
    needs: [call-backend-lint, call-backend-test]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      # Workaround for lack of support for the 'env' context in the 'with' clause
      - name: Resolve Environment Variables
        id: get-env
        outputs:
          AWS_ECR_REGISTRY: ${{ env.AWS_ECR_REGISTRY }}
        run: |
          echo "AWS_ECR_REGISTRY = $AWS_ECR_REGISTRY"

      - name: Generate Short SHA
        id: short-sha
        uses: benjlevesque/short-sha@v3.0
        with:
          length: 7

      - name: Login to Amazon ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.get-env.outputs.AWS_ECR_REGISTRY }}/backend
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: starter/backend
          file: starter/backend/Dockerfile
          push: true
          tags: ${{ steps.get-env.outputs.AWS_ECR_REGISTRY }}/backend:${{ steps.short-sha.outputs.sha }},${{ steps.get-env.outputs.AWS_ECR_REGISTRY }}/backend:latest

  backend-deploy:
    name: Backend Deploy
    runs-on: ubuntu-latest
    needs: [backend-build]
    defaults:
      run:
        working-directory: starter/backend/k8s

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Resolve Environment Variables
        id: get-env
        outputs:
          AWS_ECR_REGISTRY: ${{ env.AWS_ECR_REGISTRY }}
          AWS_REGION: ${{ env.AWS_REGION }}
        run: |
          echo "AWS_ECR_REGISTRY = $AWS_ECR_REGISTRY"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ steps.get-env.outputs.AWS_REGION }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure Kubectl Credentials
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name cluster

      - name: Install Kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash

      - name: Generate Kubernetes Manifest
        run: |
          kustomize edit set image backend=$AWS_ECR_REGISTRY/backend:latest
          kustomize build > backend.yml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f backend.yml
