name: Backend Continuous Deployment
on:
  workflow_dispatch:

  push:
    branches:
      - main
    paths:
      - 'starter/backend/**/*'

env:
  PYTHON_VERSION: '3.10'

defaults:
  run:
    working-directory: starter/backend

jobs:
  call-backend-lint:
    name: Backend Lint
    uses: ./.github/workflows/backend-lint-job.yml
    with:
      python-version: '3.10'

  call-backend-test:
    name: Backend Test
    uses: ./.github/workflows/backend-test-job.yml
    with:
      python-version: '3.10'

  backend-build:
    name: Backend Build
    runs-on: ubuntu-latest
    needs: [call-backend-lint, call-backend-test]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Generate Short SHA
        id: short-sha
        uses: benjlevesque/short-sha@v3.0
        with:
          length: 7

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AWS_ECR_REGISTRY }}/backend

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: starter/backend
          file: starter/backend/Dockerfile
          push: true
          tags: ${{ env.AWS_ECR_REGISTRY }}/backend:${{ steps.short-sha.outputs.sha }},${{ env.AWS_ECR_REGISTRY }}/backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  backend-deploy:
    name: Backend Deploy
    runs-on: ubuntu-latest
    needs: [backend-build]
    defaults:
      run:
        working-directory: starter/backend/k8s

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v2
        with:
          version: 'latest'

      - name: Configure Kubectl Credentials
        run: |
          aws eks update-kubeconfig

      - name: Install Kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash

      - name: Deploy to Kubernetes
        run: |
          kustomize edit set image backend=${{ env.AWS_ECR_REGISTRY }}/backend:latest
          kustomize build | kubectl apply -f -
