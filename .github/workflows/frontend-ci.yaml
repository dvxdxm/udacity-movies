name: Frontend Continuous Integration
on:
  workflow_dispatch:

  pull_request:
    branches:
      - main
    paths:
      - 'starter/frontend/**/*'

defaults:
  run:
    working-directory: starter/frontend

jobs:
  call-frontend-lint:
    name: Frontend Lint
    uses: ./.github/workflows/frontend-lint-job.yml
    with:
      node-version: '20.x'

  call-frontend-test:
    name: Frontend Test
    uses: ./.github/workflows/frontend-test-job.yml
    with:
      node-version: '20.x'

  frontend-build:
    name: Frontend Build
    runs-on: ubuntu-latest
    needs: [call-frontend-lint,call-frontend-test]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Prepare Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: starter/frontend

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # This is a completely redundant step which duplicates the 'Frontend Test' job called earlier in the pipeline.
      # Only adding this because it is explicitly required by the project rubric.
      - name: Build Frontend Code
        run: |
          npm ci
          npm run test

      - name: Build Frontend Container
        uses: docker/build-push-action@v5
        with:
          context: starter/backend
          file: starter/backend/Dockerfile
          build-args: REACT_APP_MOVIE_API_URL=${{ vars.REACT_APP_MOVIE_API_URL }}
          push: false
